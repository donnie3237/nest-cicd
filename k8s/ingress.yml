# IngressRoute สำหรับ HTTPS (port 443) ที่มี Certificate
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: nestjs-ingressroute-secure
  namespace: default
spec:
  # ใช้ entryPoint 'websecure' สำหรับ HTTPS
  entryPoints:
    - websecure
  routes:
    - match: Host(`nest.dossware.com`)
      kind: Rule
      services:
        - name: nestjs-app-service
          port: 80
  # บอกให้ Traefik จัดการ TLS/Certificate ให้โดยอัตโนมัติ
  tls:
    # <<< CHANGED >>> เปลี่ยนเป็นชื่อ resolver ที่เป็นมาตรฐานกว่า
    # 'letsencrypt' เป็นชื่อที่นิยมใช้และมีโอกาสทำงานได้สูง
    certResolver: letsencrypt

---
# IngressRoute สำหรับ HTTP (port 80) ที่จะทำ Redirect ไป HTTPS
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: nestjs-http-redirect
  namespace: default
spec:
  # ใช้ entryPoint 'web' สำหรับ HTTP
  entryPoints:
    - web
  routes:
    - match: Host(`nest.dossware.com`)
      kind: Rule
      # ใช้ Middleware สำหรับ redirect
      middlewares:
        - name: https-redirect-scheme
          namespace: default
      services: # ต้องมี service ถึงจะ valid แต่จะไม่ถูกเรียกใช้
        - name: nestjs-app-service
          port: 80
          kind: Service

---
# สร้าง Middleware สำหรับ redirect
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: https-redirect-scheme
  namespace: default
spec:
  redirectScheme:
    scheme: https
    permanent: true

name: Build, Push and Deploy

# ทำงานเมื่อมีการสร้าง Release ใหม่
on:
  release:
    types: [ published ] # ทำงานเฉพาะตอนที่ Release ถูก Published (ไม่ใช่ draft)

env:
  REGISTRY: ghcr.io
  # ชื่อ Image จะเป็น ghcr.io/donnie3237/nest-cicd โดยอัตโนมัติ
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # -- Job ที่ 1: สร้าง Docker Image และ Push ไปยัง GHCR --
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      # ส่งชื่อ tag ของ release (เช่น v1.0.0) ไปให้ job ถัดไป
      image_tag: ${{ steps.meta.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # ใช้ Git Tag ของ Release เป็น Docker Tag (เช่น v1.0.0)
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # การทำ Caching จะช่วยให้การ build ครั้งถัดไปเร็วขึ้นอย่างมาก
          # โดยการนำ Layer เดิมจาก cache tag มาใช้ซ้ำ
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

  # -- Job ที่ 2: อัปเดตไฟล์ Manifest ใน Repository เดียวกัน --
  update-manifest:
    # ต้องรอ job แรกเสร็จก่อน
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      # <<< CHANGED >>> Checkout ที่ 'main' branch โดยตรง
      # เพื่อให้แน่ใจว่าเราทำงานบน commit ล่าสุดเสมอ
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          ref: 'main'

      - name: Update Kubernetes manifest file
        run: |
          IMAGE_TAG="${{ needs.build-and-push-image.outputs.image_tag }}"
          echo "Updating manifest with image tag: $IMAGE_TAG"

          # แก้ไขไฟล์ deploy.yml เพื่อชี้ไปที่ image tag ใหม่
          sed -i 's|image: .*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}|g' k8s/deploy.yml

          echo "--- Updated k8s/deploy.yml ---"
          cat k8s/deploy.yml

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add k8s/deploy.yml
          git commit -m "Update image to ${{ env.IMAGE_NAME }}:${{ needs.build-and-push-image.outputs.image_tag }}" || echo "No changes to commit"
          # <<< CHANGED >>> กลับไปใช้ git push แบบปกติ
          # เพราะตอนนี้เราทำงานบน 'main' branch อยู่แล้ว
          git push
